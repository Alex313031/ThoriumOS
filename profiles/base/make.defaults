# Copyright (c) 2024 The Chromium OS Authors and Alex313031. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

# Initial value just for style purposes.
USE=""

# Set the kernel configuration/arch.
CHROMEOS_KERNEL_ARCH="x86_64"
CHROMEOS_KERNEL_SPLITCONFIG="chromeos-x86_64-reven"

# We assume that our 64bit baseline CPU supports at least
# MMX, SSE, SSE2, and SSE3.
# This aligns with Chrome requirements:
# SSE2: https://crbug.com/350175
# SSE3: https://docs.google.com/document/d/1QUzL4MGNqX4wiLvukUwBf6FdCL35kCDoEJTm2wMkahw/preview
# Added SSE4 and O3 compiler optimizations.
BOARD_COMPILER_FLAGS="-march=x86-64 -msse3 -mssse3 -msse4.1 -O3"
BOARD_RUSTFLAGS="-Ctarget-cpu=x86-64 -Copt-level=3 -Ctarget-feature=+msse4.1"
CFLAGS="${CFLAGS} -O3 -msse3 -mssse3 -msse4.1 -Wno-error"
CXXFLAGS="${CXXFLAGS} -O3 -msse3 -mssse3 -msse4.1 -Wno-error"
CFLAGS_MODULE="${CFLAGS_MODULE} -O3 -msse3 -mssse3 -msse4.1 -Wno-error"
LDFLAGS="${LDFLAGS} -msse3 -mssse3 -msse4.1 -Wl,-O3 -Wl,--lto-O3"
# CPU USE EXPAND FLAGS
CPU_FLAGS_X86="${CPU_FLAGS_X86} mmx mmxext sse sse2 sse3 ssse3 sse4_1"

USE="${USE} march_x86-64 mmx mmxext sse sse2 sse3 ssse3 sse4_1"

# Include many firmwares as this is a "generic" board and might run on a wide variety
# of platforms with who knows what kind of hardware. -cros-pd disables USB-PD EC firmware updating.
LINUX_FIRMWARE="${LINUX_FIRMWARE} amd_ucode ath3k-all iwlwifi-all brcmfmac-all -cros-pd intel_ucode rfkill"

# Set input devices for generic board.
INPUT_DEVICES="${INPUT_DEVICES} keyboard mouse evdev cmt synaptics"

# Use LLVM amdgpu target when building LLVM.
LLVM_TARGETS="AMDGPU X86"

# Enable optional features on generic overlays, minus wifi bootstrapping for avahi-daemon.
USE="${USE} beep screensaver screensavers webui-tab-strip ppapi ffmpeg -wifi_bootstrapping"
USE="${USE} bluetooth cros_disks scanner ml_service power_management cups highlights assistant assistant-dlc libassistant libassistant-dlc peerd vpn lottie"
#USE="${USE} buffet postscript"

# Remove debug constructs.
USE="${USE} -debug -chrome_debug -chrome_debug_tests -chromeless_tests -cros-debug"

# Enable non-free codecs and components.
USE="${USE} chrome_media vaapi x264 x265 hevc_codec widevine lto thinlto"
#USE="${USE} app_shell content_shell"

# Enable background blur on all graphics chipsets.
USE="${USE} background_blur"

# USE flags for Crostini, CrOSVM, and containers.
USE="${USE} crostini bruschetta containers kvm kvm_host crosvm-gpu virtio_gpu adb"

# Enable Downloadable Content (DLC), optional USE for Crostini.
USE="${USE} dlc dlc_test iioservice"

# Enable legacy components for generic x64 board.
USE="${USE} legacy_usb usb legacy_keyboard legacy_power_button pcserial diagnostics diag cras selinux_experimental fdformat"

# Enable support for some UEFI-specific features.
USE="${USE} uefi"

# Kernel configuration.
USE="${USE} -kernel-4_4 -kernel-4_14 -kernel-4_19 -kernel-5_4 -kernel-5_10 kernel-5_15 -kernel-6_1 -kernel-6_6 i2cdev builtin_fw_x86_intel_ucode builtin_fw_x86_amd_ucode linux_firmware_amd_ucode nouveau legacy_amd64_cpu_support"
USE="${USE} headers linux-mod linux_headers linux-headers it87 amd_ucode ath3k-all iwlwifi-all brcmfmac-all -cros-pd intel_ucode rfkill iwlwifi_rescan rtl8188ee edid"

# USE flags from FydeOS
USE="${USE} esdfs intel_lpe"

#USE="${USE} usb_gadget usbguard usbip udev autoexpand lxc magic cros-ec"

# Use linux kernel modules/firmware/microcode and enable calling them from cmdline.
USE="${USE} modules kmod sensors"
USE="${USE} initramfs split-ucode"

# Enable the OS installation feature
USE="${USE} os_install_service"

# /var/lib/flex_id/flex_id
USE="${USE} flex_id"

# Enable the flexor package.
#USE="${USE} flexor"

# Enable libinput to handle touchpad if the gestures library is not working well.
USE="${USE} libinput"

# The rgbkbd service crashes constantly. b/243560151
USE="${USE} -rgbkbd"

# Enable management of EFI boot entries when installing/updating.
USE="${USE} manage_efi_boot_entries"

# Repair the GPT when installing/updating, mostly for mass deploy (b/257478857).
USE="${USE} postinstall_cgpt_repair"

# Enable chromeos postinstall to configure both efi
# and syslinux configuration files on install.
USE="${USE} postinstall_config_efi_and_legacy"

# Enable mesa-reven for CloudReady graphics support.
USE="${USE} mesa_reven reven"
USE="${USE} libkms libdrm"

# Enable Steam on CrOS (borealis).
#USE="${USE} borealis borealis_host has-borealis"

# Enable Google Drive.
USE="${USE} googledrive fuse-drivefs google-drive-fs drivefs libfuse fuse fusebox spaced user_allow_other"

# Enable NFS, FAT/FAT32, NVMe, and eMMC Tools.
USE="${USE} nfs vfat nvme mmc"

# Dircrypto for stateful partition. On kernel 5.x this should be set to direncription_allow_v2.
USE="${USE} cryptohome_userdataauth_interface"
#USE="${USE} uprev-4-to-5 has-kernelnext direncryption"

# Enable using sudo in Crosh
USE="${USE} login_enable_crosh_sudo"

# Enable fscrypt v2 usage on 5.4+
USE="${USE} direncription_allow_v2"

# mesa-llvmpipe/mesa-reven does not require this flag yet.
# TODO(b/200187231): Reexamine if early sandbox initialization is required
# once mesa-reven uprevs past version 21.3.
USE="${USE} -gpu_sandbox_start_early"

# Use frecon, the freon graphics virtual terminal for devices using KMS for graphics setting.
USE="${USE} frecon vtconsole"
#USE="${USE} fbconsole"

# LLVM is required to build the llvmpipe, mesa-reven, and radeon drivers.
USE="${USE} llvm"

# Enable libglvnd for big GL.
USE="${USE} libglvnd"

# Enable NNAPI for testing.
#USE="${USE} nnapi"

# Enable hps for DUT testing.
#USE="${USE} hps"

# Enable camera HALv3.
USE="${USE} arc-camera3"

# Enable sirenia for ManaTEE runtime environment testing.
# USE="${USE} sirenia"

# Enable vivid for VM camera.
USE="${USE} vivid"

# Enable hostap hwsim tests.
#USE="${USE} wifi_hostap_test"

# Include the kernel in the base image.
USE="${USE} include_vmlinuz"

# Enable chromeos-config and unibuild.
USE="${USE} unibuild has_chromeos_config_bsp"

# Enable wayland and egl for LaCrOS.
#USE="${USE} wayland egl"

# Enable Vulkan for ClusterFuzz and GPU.
USE="${USE} vulkan"

# Enable VMware GPU.
USE="${USE} video_cards_vmware virgl"

# Use legacy pre-Groot UI for initramfs and init script screens.
USE="${USE} legacy_firmware_ui"

# Enable more video cards as this is a generic board. i915 is kept for posterity after M90.
VIDEO_CARDS="${VIDEO_CARDS} i965 i915 intel iris iHD iHD_g8 iHD_g9 iHD_g11 iHD_g12 llvmpipe nouveau amdgpu radeon radeonsi vmware virgl"
#VIDEO_CARDS="${VIDEO_CARDS} vc4 fbdev"

# b/195140252: Do not run the factory tasts.
USE="${USE} no_factory_flow"

# Virtual machines don't have physical TPMs.
# Enable TPM2.0 simulator on it.
USE="${USE} tpm tpm2 tpm_dynamic tpm2_simulator tpm2_simulator_manufacturer"

# Enable vTPM proxy on board for driver-level TPM simulator.
USE="${USE} vtpm_proxy tpm_fallback tpm_insecure_fallback"

# No support for zero-copy on virtual machines. Comment out for physical machines.
USE="${USE} -video_capture_use_gpu_memory_buffer"

# Enable VKMS for compositor testing on VMs
#USE="${USE} vkms drm_atomic"
